{"ast":null,"code":"var _jsxFileName = \"/Users/ddev/Desktop/FrontEnd/education/React/tanderdemo/src/Comment.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Axios from 'axios';\nimport { TextField } from '@material-ui/core';\nimport InputMask from \"react-input-mask\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectField from '@material-ui/core/Select';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormErrors from './layout/FormErrors.js';\nimport Alert from '@material-ui/lab/Alert';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\nclass Comment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      regions: [],\n      cities: [],\n      formErrors: {\n        firstname: '',\n        lastname: '',\n        email: '',\n        telnumber: '',\n        commentText: ''\n      },\n      fistname: '',\n      lastname: '',\n      middlename: '',\n      telnumber: '',\n      email: '',\n      commentText: '',\n      region: '',\n      city: '',\n      firstnameValid: false,\n      lastnameValid: false,\n      telnumberValid: false,\n      emailValid: false,\n      commentTextValid: false,\n      formValid: false\n    };\n\n    this.onSubmit = () => {\n      const {\n        lastname,\n        firstname,\n        middlename,\n        commentText,\n        region,\n        email,\n        telnumber,\n        city\n      } = this.state;\n      var data = {\n        lastname: this.state.lastname,\n        firstname: this.state.firstname,\n        middlename: this.state.middlename,\n        commentText: this.state.commentText,\n        region: this.state.region,\n        email: this.state.email,\n        telnumber: this.state.telnumber,\n        city: this.state.city\n      };\n      const axiosConfig = {\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n          'mode': 'no-cors'\n        }\n      };\n      Axios.post('http://localhost:8080/comment', JSON.stringify(data), axiosConfig).then(response => {\n        // this.setState({regState: true});\n        // console.log(response.status);\n        console.log(\"STATUS: \" + response.status);\n      });\n    };\n\n    this.onChange = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState({\n        [name]: value\n      }, () => {\n        this.validateField(name, value);\n      });\n    };\n  }\n\n  validateField(fieldName, value) {\n    let fieldValidationErrors = this.state.formErrors;\n    let firstnameValid = this.state.firstnameValid;\n    let lastnameValid = this.state.lastnameValid;\n    let telnumberValid = this.state.telnumberValid;\n    let emailValid = this.state.emailValid;\n    let commentTextValid = this.state.commentTextValid;\n\n    switch (fieldName) {\n      case 'email':\n        emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n        fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n        break;\n\n      case 'commentText':\n        commentTextValid = value.length >= 6;\n        fieldValidationErrors.commentText = commentTextValid ? '' : ' is too short';\n        break;\n\n      case 'firstname':\n        firstnameValid = value.length >= 3;\n        fieldValidationErrors.firstname = firstnameValid ? '' : 'Ошибка';\n        break;\n\n      case 'lastname':\n        lastnameValid = value.length >= 3;\n        fieldValidationErrors.lastname = lastnameValid ? '' : 'Ошибка';\n        break;\n\n      case 'telnumber':\n        telnumberValid = value.length >= 3;\n        fieldValidationErrors.telnumber = telnumberValid ? '' : 'Минимальная длина 3 буквы';\n        break;\n\n      default:\n        break;\n    }\n\n    this.setState({\n      formErrors: fieldValidationErrors,\n      emailValid: emailValid,\n      commentTextValid: commentTextValid,\n      firstnameValid: firstnameValid,\n      lastnameValid: lastnameValid,\n      telnumberValid: telnumberValid\n    }, this.validateForm);\n  }\n\n  validateForm() {\n    this.setState({\n      formValid: this.state.emailValid && this.state.commentTextValid && this.state.firstnameValid && this.state.lastnameValid && this.state.telnumberValid\n    });\n  }\n\n  loadRegions() {\n    const axiosConfig = {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'mode': 'no-cors'\n      }\n    };\n    Axios.get('http://localhost:8080/regions', axiosConfig).then(response => {\n      if (response.status != 200) {\n        console.log(\"ERRORRRRRR!!\");\n      } else {\n        console.log(response.data);\n        this.setState({\n          regions: response.data\n        });\n        console.log(this.state); // this.setState({load: true});\n        // this.setState({Userlist: response.data});\n        // console.log(this.state.Userlist[0].id);\n        // this.state.Userlist.map((user) => console.log(user.id));\n        // console.log(JSON.parse(this.state.Userlist));\n        // console.log(JSON.parse(response.data))\n      }\n    });\n  }\n\n  loadCities(value) {\n    const axiosConfig = {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'mode': 'no-cors'\n      }\n    };\n    this.setState({\n      region: value\n    });\n    Axios.get('http://localhost:8080/cities?region=' + value, axiosConfig).then(response => {\n      if (response.status != 200) {\n        console.log(\"ERRORRRRRR!!\");\n      } else {\n        console.log(response.data);\n        this.setState({\n          cities: response.data\n        });\n        console.log(this.state); // this.setState({load: true});\n        // this.setState({Userlist: response.data});\n        // console.log(this.state.Userlist[0].id);\n        // this.state.Userlist.map((user) => console.log(user.id));\n        // console.log(JSON.parse(this.state.Userlist));\n        // console.log(JSON.parse(response.data))\n      }\n    });\n  }\n\n  render() {\n    if (this.state.regions == 0) {\n      this.loadRegions();\n    }\n\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      style: bodyStyle,\n      spacing: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      className: \"col-8 mt-4 shadow p-3 mb-5 bg-white rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      class: \"mt-1 mb-3 font-weight-light text-primary h2 mx-auto bg-white rounded\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 13\n      }\n    }, \"\\u0424\\u043E\\u0440\\u043C\\u0430\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(FormErrors, {\n      formErrors: this.state.formErrors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 12,\n      style: {\n        marginTop: 24\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      name: \"lastname\",\n      style: {\n        marginRight: 12\n      },\n      type: \"text\",\n      id: \"outlined-basic\",\n      label: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F\",\n      variant: \"outlined\",\n      onChange: this.onChange,\n      value: this.state.lastname,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0444\\u0430\\u043C\\u0438\\u043B\\u0438\\u044E\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"firstname\",\n      style: {\n        marginLeft: 12\n      },\n      id: \"outlined-basic\",\n      label: \"\\u0418\\u043C\\u044F\",\n      variant: \"outlined\",\n      onChange: this.onChange,\n      value: this.state.firstname,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      style: {\n        marginLeft: 12\n      },\n      name: \"middlename\",\n      type: \"text\",\n      id: \"outlined-basic\",\n      label: \"\\u041E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\",\n      variant: \"outlined\",\n      onChange: this.onChange,\n      value: this.state.middlename,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 12,\n      style: {\n        marginTop: 24\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"combo-box-demo\",\n      options: this.state.regions,\n      getOptionLabel: option => option,\n      onChange: (event, value) => this.loadCities(value),\n      style: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"\\u0420\\u0435\\u0433\\u0438\\u043E\\u043D\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 54\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Autocomplete, {\n      id: \"combo-box-demo\",\n      options: this.state.cities,\n      getOptionLabel: option => option,\n      onChange: (event, value) => this.setState({\n        city: value\n      }),\n      style: {\n        width: 300\n      },\n      renderInput: params => /*#__PURE__*/React.createElement(TextField, Object.assign({}, params, {\n        label: \"\\u0413\\u043E\\u0440\\u043E\\u0434\",\n        variant: \"outlined\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 54\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      md: 12,\n      style: {\n        marginTop: 24\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"email\",\n      style: {\n        marginRight: 12\n      },\n      id: \"outlined-basic\",\n      label: \"E-mail\",\n      variant: \"outlined\",\n      onChange: this.onChange,\n      value: this.state.email,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      type: \"phone\",\n      name: \"telnumber\",\n      style: {\n        marginLeft: 12\n      },\n      id: \"outlined-basic\",\n      label: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n      variant: \"outlined\",\n      onChange: this.onChange,\n      value: this.state.telnumber,\n      placeholder: \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(InputMask, {\n      mask: \"(0)999 999 99 99\",\n      maskChar: \" \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 23\n      }\n    })), /*#__PURE__*/React.createElement(TextField, {\n      type: \"text\",\n      name: \"commentText\",\n      style: {\n        marginLeft: 12\n      },\n      id: \"outlined-basic\",\n      label: \"\\u0422\\u0435\\u043A\\u0441\\u0442\",\n      variant: \"outlined\",\n      onChange: this.onChange,\n      value: this.state.commentText,\n      placeholder: \"\\u041D\\u0430\\u043F\\u0438\\u0448\\u0438\\u0442\\u0435 \\u0412\\u0430\\u0448 \\u043A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 1\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"\\u041E\\u0442\\u043F\\u0440\\u0430\\u0432\\u0438\\u0442\\u044C\",\n      className: \"btn\",\n      disabled: !this.state.formValid,\n      style: buttonStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 17\n      }\n    })));\n  }\n\n}\n\nconst buttonStyle = {\n  background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n  border: 0,\n  borderRadius: 3,\n  boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  color: 'white',\n  height: 48,\n  marginTop: 24,\n  padding: '0 30px'\n};\nconst formStyle = {\n  align: 'center'\n};\nconst bodyStyle = {\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center'\n};\nexport default Comment;","map":{"version":3,"sources":["/Users/ddev/Desktop/FrontEnd/education/React/tanderdemo/src/Comment.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","Axios","TextField","InputMask","Grid","Paper","makeStyles","SelectField","Card","CardActions","CardContent","Button","Typography","FormErrors","Alert","Select","MenuItem","Autocomplete","Comment","state","regions","cities","formErrors","firstname","lastname","email","telnumber","commentText","fistname","middlename","region","city","firstnameValid","lastnameValid","telnumberValid","emailValid","commentTextValid","formValid","onSubmit","data","axiosConfig","headers","post","JSON","stringify","then","response","console","log","status","onChange","e","name","target","value","setState","validateField","fieldName","fieldValidationErrors","match","length","validateForm","loadRegions","get","loadCities","render","bodyStyle","marginTop","marginRight","marginLeft","option","event","width","params","buttonStyle","background","border","borderRadius","boxShadow","color","height","padding","formStyle","align","display","flexDirection","alignItems","justifyContent"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Axios from 'axios';\n\n\nimport { TextField } from '@material-ui/core';\nimport InputMask from \"react-input-mask\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectField from '@material-ui/core/Select';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormErrors from './layout/FormErrors.js';\nimport Alert from '@material-ui/lab/Alert';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n\n\n\n\n\n\n\nclass Comment extends Component {\n\n\n    state = {\n        regions: [],\n        cities: [],\n        formErrors: {firstname: '', lastname: '', email: '', telnumber: '', commentText: ''},\n        fistname: '',\n        lastname: '',\n        middlename: '',\n        telnumber: '',\n        email: '',\n        commentText: '',\n        region: '',\n        city: '',\n        firstnameValid: false,\n        lastnameValid: false,\n        telnumberValid: false,\n        emailValid: false,\n        commentTextValid: false,\n        formValid: false,\n\n      }\n\n\n\n\n      validateField(fieldName, value) {\n        let fieldValidationErrors = this.state.formErrors;\n        let firstnameValid = this.state.firstnameValid;\n        let lastnameValid = this.state.lastnameValid;\n        let telnumberValid = this.state.telnumberValid;\n        let emailValid = this.state.emailValid;\n        let commentTextValid = this.state.commentTextValid;\n        \n      switch(fieldName) {\n          case 'email':\n            emailValid = value.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\n            fieldValidationErrors.email = emailValid ? '' : ' is invalid';\n            break;\n          case 'commentText':\n            commentTextValid = value.length >= 6;\n            fieldValidationErrors.commentText = commentTextValid ? '': ' is too short';\n            break;\n          case 'firstname':\n            firstnameValid = value.length >= 3;\n            fieldValidationErrors.firstname = firstnameValid ? '' : 'Ошибка';\n            break;\n          case 'lastname':\n            lastnameValid = value.length >= 3;\n            fieldValidationErrors.lastname = lastnameValid ? '' : 'Ошибка';\n            break;\n          case 'telnumber':\n            telnumberValid = value.length >= 3;\n            fieldValidationErrors.telnumber = telnumberValid ? '' : 'Минимальная длина 3 буквы';\n            break;\n          default:\n            break;\n        }\n        this.setState({formErrors: fieldValidationErrors,\n                        emailValid: emailValid,\n                        commentTextValid: commentTextValid,\n                        firstnameValid: firstnameValid,\n                        lastnameValid: lastnameValid,\n                        telnumberValid: telnumberValid\n                      }, this.validateForm);\n      }\n      validateForm() {\n        this.setState({formValid: this.state.emailValid &&\n                                  this.state.commentTextValid &&\n                                  this.state.firstnameValid &&\n                                  this.state.lastnameValid &&\n                                  this.state.telnumberValid\n                                });\n      }\n\n\n\n\n    loadRegions() {\n        const axiosConfig = {\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'mode': 'no-cors'\n      \n          }\n      \n      }\n      \n      \n      \n          Axios.get('http://localhost:8080/regions', axiosConfig)\n          .then(response => {\n      \n              if (response.status != 200){\n                  console.log(\"ERRORRRRRR!!\");\n      \n      \n              } else {\n                  console.log(response.data);\n                  this.setState({regions: response.data});\n                  console.log(this.state);\n                  // this.setState({load: true});\n                  // this.setState({Userlist: response.data});\n                  // console.log(this.state.Userlist[0].id);\n                  // this.state.Userlist.map((user) => console.log(user.id));\n                  // console.log(JSON.parse(this.state.Userlist));\n                  // console.log(JSON.parse(response.data))\n      \n              }\n      \n          })\n      }\n\n\n      loadCities(value) {\n        const axiosConfig = {\n          headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'mode': 'no-cors'\n      \n          }\n      }\n      this.setState({region: value});\n      \n      \n      \n          Axios.get('http://localhost:8080/cities?region=' + value, axiosConfig)\n          .then(response => {\n      \n              if (response.status != 200){\n                  console.log(\"ERRORRRRRR!!\");\n      \n      \n              } else {\n                  console.log(response.data);\n                  this.setState({cities: response.data});\n                  console.log(this.state);\n                  // this.setState({load: true});\n                  // this.setState({Userlist: response.data});\n                  // console.log(this.state.Userlist[0].id);\n                  // this.state.Userlist.map((user) => console.log(user.id));\n                  // console.log(JSON.parse(this.state.Userlist));\n                  // console.log(JSON.parse(response.data))\n      \n              }\n      \n          })\n      }\n\n\n      onSubmit = () => {\n\n        const {lastname, firstname, middlename, commentText, region, email, telnumber, city} = this.state;\n\n        var data = {\n            lastname: this.state.lastname,\n            firstname: this.state.firstname,\n            middlename: this.state.middlename,\n            commentText: this.state.commentText,\n            region: this.state.region,\n            email: this.state.email,\n            telnumber: this.state.telnumber,\n            city: this.state.city\n        }\n\n        const axiosConfig = {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'mode': 'no-cors',\n\n            }\n          };\n\n\n        Axios.post('http://localhost:8080/comment', JSON.stringify(data), axiosConfig)\n        .then(response => {\n            // this.setState({regState: true});\n            \n            \n                // console.log(response.status);\n\n\n                console.log(\"STATUS: \" + response.status);\n                \n            }\n        )\n      }\n\n\n\n\n\n      onChange = (e) => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({[name]: value}, \n                      () => { this.validateField(name, value) });\n    }\n\n      render(){\n          if (this.state.regions == 0){\n            this.loadRegions();\n          }\n        return (\n            <Grid container style={bodyStyle} spacing={0}>\n\n            <form onSubmit={this.onSubmit} className=\"col-8 mt-4 shadow p-3 mb-5 bg-white rounded\">\n            <p class=\"mt-1 mb-3 font-weight-light text-primary h2 mx-auto bg-white rounded\">Форма</p>\n\n            <div>\n\n                <FormErrors formErrors={this.state.formErrors} />\n            </div>\n            <Grid item md={12} style={{marginTop: 24}}>\n                <TextField\n                    name=\"lastname\"\n                    style={{marginRight: 12}}\n                    type=\"text\"\n                    id=\"outlined-basic\" \n                    label=\"Фамилия\" \n                    variant=\"outlined\"\n                    onChange={this.onChange}\n                    value={this.state.lastname}\n                    placeholder=\"Введите фамилию\"\n                /><TextField\n                    type=\"text\"\n                    name=\"firstname\"\n                    style={{marginLeft: 12}}\n                    id=\"outlined-basic\" \n                    label=\"Имя\" \n                    variant=\"outlined\"\n                    onChange={this.onChange}\n                    value={this.state.firstname}\n                    placeholder=\"Введите имя\"\n                />\n                <TextField\n                    style={{marginLeft: 12}}\n                    name=\"middlename\"\n                    type=\"text\"\n                    id=\"outlined-basic\" \n                    label=\"Отчество\" \n                    variant=\"outlined\"\n                    onChange={this.onChange}\n                    value={this.state.middlename}\n                    placeholder=\"Введите отчество\"\n                />\n            </Grid>\n            <Grid item md={12} style={{marginTop: 24}}>\n                {/* <TextField\n                    style={{marginRight: 12}}\n                    name=\"username\"\n                    type=\"text\"\n                    id=\"outlined-basic\" \n                    label=\"Логин\" \n                    variant=\"outlined\"\n                    onChange={this.onChange}\n                    value={this.state.username}\n                    placeholder=\"Введите логин\"\n                />\n                <TextField \n                    type=\"password\"\n                    name=\"password\"\n                    style={{marginLeft: 12}}\n                    id=\"outlined-basic\" \n                    label=\"Пароль\" \n                    variant=\"outlined\"\n                    onChange={this.onChange}\n                    value={this.state.password}\n                    placeholder=\"Введите пароль\"\n                /> */}\n                \n                        <Autocomplete\n                            id=\"combo-box-demo\"\n                            options={this.state.regions}\n                            getOptionLabel={(option) => option}\n                            onChange={(event, value) => this.loadCities(value)}\n                            style={{ width: 300 }}\n                            renderInput={(params) => <TextField {...params} label=\"Регион\" variant=\"outlined\" />}\n                        />\n                        <Autocomplete\n                            id=\"combo-box-demo\"\n                            options={this.state.cities}\n                            getOptionLabel={(option) => option}\n                            onChange={(event, value) => this.setState({city: value})}\n                            style={{ width: 300 }}\n                            renderInput={(params) => <TextField {...params} label=\"Город\" variant=\"outlined\" />}\n                        />\n            </Grid>\n            <Grid item md={12} style={{marginTop: 24}}>\n                <TextField \n                    type=\"text\"\n                    name=\"email\"\n                    style={{marginRight: 12}}\n                    id=\"outlined-basic\" \n                    label=\"E-mail\" \n                    variant=\"outlined\"\n                    onChange={this.onChange}\n                    value={this.state.email}\n                    placeholder=\"Введите email\"\n                />\n                \n                <TextField \n                    type=\"phone\"\n                    name=\"telnumber\"\n                    style={{marginLeft: 12}}\n                    id=\"outlined-basic\" \n                    label=\"Номер телефона\" \n                    variant=\"outlined\"\n                    onChange={this.onChange}\n                    value={this.state.telnumber}\n                    placeholder=\"Введите номер телефона\"\n                >\n                      <InputMask mask=\"(0)999 999 99 99\" maskChar=\" \" />\n                    </TextField>\n\n\n\n<TextField \n                    type=\"text\"\n                    name=\"commentText\"\n                    style={{marginLeft: 12}}\n                    id=\"outlined-basic\" \n                    label=\"Текст\" \n                    variant=\"outlined\"\n                    onChange={this.onChange}\n                    value={this.state.commentText}\n                    placeholder=\"Напишите Ваш комментарий\"\n                />  \n\n            </Grid>\n        \n\n                    {/* <button type=\"submit\" class=\"btn btn-primary mx-auto\">Зарегистрироваться</button> */}\n                <input \n                    type=\"submit\" \n                    value=\"Отправить\" \n                    className=\"btn\"\n                    disabled={!this.state.formValid}\n                    style = {buttonStyle}\n                />\n\n                    \n\n\n                     </form>\n\n\n                     \n                     </Grid>\n          );\n      }\n}\n\n\n\nconst buttonStyle = {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    marginTop: 24,\n    padding: '0 30px',\n}\n\nconst formStyle = {\n    align: 'center'\n}\n\nconst bodyStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center'\n}\n\n\nexport default Comment;\n"]},"metadata":{},"sourceType":"module"}