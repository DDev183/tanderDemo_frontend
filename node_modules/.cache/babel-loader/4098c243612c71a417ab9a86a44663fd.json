{"ast":null,"code":"var _jsxFileName = \"/Users/ddev/Desktop/FrontEnd/education/React/tanderdemo/src/Stat.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Axios from 'axios';\nimport { TextField } from '@material-ui/core';\nimport InputMask from \"react-input-mask\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectField from '@material-ui/core/Select';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormErrors from './layout/FormErrors.js';\nimport Alert from '@material-ui/lab/Alert';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PhoneInput from 'react-phone-number-input';\nimport MaskedInput from 'react-text-mask';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinkMaterial from '@material-ui/core/Link';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\nimport clsx from 'clsx';\nimport { lighten } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { Container } from '@material-ui/core'; // import {\n//   MuiPickersUtilsProvider,\n//   KeyboardTimePicker,\n//   KeyboardDatePicker,\n// } from '@material-ui/pickers';\n\nclass Stat extends Component {\n  constructor(...args) {\n    super(...args);\n    this.useStyles = makeStyles(theme => ({\n      table: {\n        minWidth: 650\n      },\n      formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(3)\n      },\n      container: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200\n      }\n    }));\n    this.state = {\n      comments: [],\n      city: false,\n      cities: []\n    };\n  }\n\n  componentDidMount() {\n    const axiosConfig = {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'mode': 'no-cors'\n      }\n    };\n    Axios.get('http://localhost:8080/stat', axiosConfig).then(response => {\n      if (response.status != 200) {\n        console.log(\"ERRORRRRRR!!\");\n      } else {\n        console.log(response.data);\n        this.setState({\n          comments: response.data\n        });\n        console.log(this.state.comments); // this.setState({load: true});\n        // this.setState({Userlist: response.data});\n        // console.log(this.state.Userlist[0].id);\n        // this.state.Userlist.map((user) => console.log(user.id));\n        // console.log(JSON.parse(this.state.Userlist));\n        // console.log(JSON.parse(response.data))\n      }\n    });\n  }\n\n  back() {\n    this.setState({\n      cities: []\n    });\n    this.setState({\n      city: false\n    });\n  }\n\n  getCities(region) {\n    console.log(region);\n    const axiosConfig = {\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json',\n        'mode': 'no-cors'\n      }\n    };\n    Axios.get('http://localhost:8080/regionStat?region=' + region, axiosConfig).then(response => {\n      if (response.status != 200) {\n        console.log(\"ERRORRRRRR!!\");\n      } else {\n        console.log(response.data);\n        this.setState({\n          cities: response.data\n        });\n        this.setState({\n          city: true\n        }); // this.setState({load: true});\n        // this.setState({Userlist: response.data});\n        // console.log(this.state.Userlist[0].id);\n        // this.state.Userlist.map((user) => console.log(user.id));\n        // console.log(JSON.parse(this.state.Userlist));\n        // console.log(JSON.parse(response.data))\n      }\n    });\n  }\n\n  render() {\n    if (this.state.city == false) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableContainer, {\n        component: Paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: this.useStyles.table,\n        \"aria-label\": \"simple table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 33\n        }\n      }, \"\\u0420\\u0435\\u0433\\u0438\\u043E\\u043D\"), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 33\n        }\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }, this.state.comments.map((comment, index) => /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Link, {\n        component: \"button\",\n        variant: \"body2\",\n        onClick: () => {\n          console.info(\"I'm a button.\");\n          this.getCities(comment.region);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 33\n        }\n      }, comment.region)), /*#__PURE__*/React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 33\n        }\n      }, comment.size)))))));\n    }\n\n    if (this.state.city == true) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(TableContainer, {\n        component: Paper,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Table, {\n        className: this.useStyles.table,\n        \"aria-label\": \"simple table\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(TableHead, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(TableRow, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 31\n        }\n      }, \"\\u0413\\u043E\\u0440\\u043E\\u0434\"), /*#__PURE__*/React.createElement(TableCell, {\n        align: \"left\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 31\n        }\n      }, \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E\"))), /*#__PURE__*/React.createElement(TableBody, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 27\n        }\n      }, this.state.cities.map((city, index) => /*#__PURE__*/React.createElement(TableRow, {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 31\n        }\n      }, city.region), /*#__PURE__*/React.createElement(TableCell, {\n        component: \"th\",\n        scope: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 31\n        }\n      }, city.size)))))), /*#__PURE__*/React.createElement(Button, {\n        onClick: () => this.back(),\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 23\n        }\n      }, \"\\u041D\\u0430\\u0437\\u0430\\u0434\"));\n    }\n  }\n\n}\n\nexport default Stat;","map":{"version":3,"sources":["/Users/ddev/Desktop/FrontEnd/education/React/tanderdemo/src/Stat.js"],"names":["React","Component","BrowserRouter","Router","Switch","Route","Link","Axios","TextField","InputMask","Grid","Paper","makeStyles","SelectField","Card","CardActions","CardContent","Button","Typography","FormErrors","Alert","Select","MenuItem","Autocomplete","PhoneInput","MaskedInput","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","LinkMaterial","PropTypes","Box","clsx","lighten","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","TableSortLabel","Toolbar","Checkbox","IconButton","Tooltip","FormControlLabel","DeleteIcon","FilterListIcon","InputLabel","FormHelperText","FormControl","Snackbar","Container","Stat","useStyles","theme","table","minWidth","formControl","margin","spacing","selectEmpty","marginTop","container","display","flexWrap","textField","marginLeft","marginRight","width","state","comments","city","cities","componentDidMount","axiosConfig","headers","get","then","response","status","console","log","data","setState","back","getCities","region","render","map","comment","index","info","size"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Axios from 'axios';\n\n\nimport { TextField } from '@material-ui/core';\nimport InputMask from \"react-input-mask\";\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectField from '@material-ui/core/Select';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormErrors from './layout/FormErrors.js';\nimport Alert from '@material-ui/lab/Alert';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport PhoneInput from 'react-phone-number-input';\nimport MaskedInput from 'react-text-mask';\n\n\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport LinkMaterial from '@material-ui/core/Link';\nimport PropTypes from 'prop-types';\nimport Box from '@material-ui/core/Box';\n\nimport clsx from 'clsx';\nimport { lighten } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport { Container } from '@material-ui/core';\n\n// import {\n//   MuiPickersUtilsProvider,\n//   KeyboardTimePicker,\n//   KeyboardDatePicker,\n// } from '@material-ui/pickers';\n\n\n\n\n\n\n\n\n\nclass Stat extends Component {\n\n\n  useStyles = makeStyles((theme) => ({\n    table: {\n      minWidth: 650,\n    },\n    formControl: {\n        margin: theme.spacing(1),\n        minWidth: 120,\n      },\n      selectEmpty: {\n        marginTop: theme.spacing(3),\n      },\n      container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n      },\n      textField: {\n        marginLeft: theme.spacing(1),\n        marginRight: theme.spacing(1),\n        width: 200,\n      },\n  }));\n  \n\n\n    state = {\n        comments: [],\n        city: false,\n        cities: []\n    }\n\n    componentDidMount() {\n      const axiosConfig = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'mode': 'no-cors'\n    \n        }\n    \n    }\n    \n    \n    \n        Axios.get('http://localhost:8080/stat', axiosConfig)\n        .then(response => {\n    \n            if (response.status != 200){\n                console.log(\"ERRORRRRRR!!\");\n    \n    \n            } else {\n                console.log(response.data);\n                this.setState({comments: response.data});\n                console.log(this.state.comments);\n                // this.setState({load: true});\n                // this.setState({Userlist: response.data});\n                // console.log(this.state.Userlist[0].id);\n                // this.state.Userlist.map((user) => console.log(user.id));\n                // console.log(JSON.parse(this.state.Userlist));\n                // console.log(JSON.parse(response.data))\n    \n            }\n    \n        })\n    }\n\n    back(){\n        this.setState({cities: []});\n        this.setState({city: false});\n    }\n\n\n    getCities(region) {\n        console.log(region);\n\n        const axiosConfig = {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'mode': 'no-cors'\n        \n            }\n        \n        }\n        \n        \n        \n            Axios.get('http://localhost:8080/regionStat?region=' + region, axiosConfig)\n            .then(response => {\n        \n                if (response.status != 200){\n                    console.log(\"ERRORRRRRR!!\");\n        \n        \n                } else {\n                    console.log(response.data);\n                    this.setState({cities: response.data});\n                    this.setState({city: true});\n                    // this.setState({load: true});\n                    // this.setState({Userlist: response.data});\n                    // console.log(this.state.Userlist[0].id);\n                    // this.state.Userlist.map((user) => console.log(user.id));\n                    // console.log(JSON.parse(this.state.Userlist));\n                    // console.log(JSON.parse(response.data))\n        \n                }\n        \n            })\n    }\n\n\n\n\n    render(){\n    if (this.state.city == false) {\n        \n      return(\n        <div>\n          <TableContainer component={Paper}>\n                        <Table className={this.useStyles.table} aria-label=\"simple table\">\n                            <TableHead>\n                            <TableRow>\n                                <TableCell align=\"left\">Регион</TableCell>\n                                <TableCell align=\"left\">Количество</TableCell>\n\n                            </TableRow>\n                            </TableHead>\n                            <TableBody>\n                            {this.state.comments.map((comment, index) => (\n\n\n                                <TableRow key={index}>\n                                <TableCell align=\"left\">\n                                \n                                <Link\n                                    component=\"button\"\n                                    variant=\"body2\"\n                                    onClick={() => {\n                                        console.info(\"I'm a button.\");\n                                        this.getCities(comment.region);\n\n                                    }}\n                                    >\n                                    {comment.region}\n                                    </Link>\n                                </TableCell>\n                                <TableCell component=\"th\" scope=\"row\">{comment.size}</TableCell>\n\n                              \n                                \n                                    \n\n\n\n                                </TableRow>\n                            ))}\n                            </TableBody>\n                        </Table>\n                        </TableContainer>\n        </div>\n      )\n    }\nif (this.state.city == true) {\n    return(\n        <div>\n        <TableContainer component={Paper}>\n                      <Table className={this.useStyles.table} aria-label=\"simple table\">\n                          <TableHead>\n                          <TableRow>\n                              <TableCell align=\"left\">Город</TableCell>\n                              <TableCell align=\"left\">Количество</TableCell>\n\n                          </TableRow>\n                          </TableHead>\n                          <TableBody>\n                          {this.state.cities.map((city, index) => (\n\n\n                              <TableRow key={index}>\n                              <TableCell component=\"th\" scope=\"row\">{city.region}</TableCell>\n                              <TableCell component=\"th\" scope=\"row\">{city.size}</TableCell>\n\n                            \n                              \n                                  \n\n\n\n                              </TableRow>\n                          ))}\n                          </TableBody>\n                      </Table>\n                      </TableContainer>\n\n\n                      <Button onClick={() => this.back()} color=\"primary\">\n                            Назад\n                        </Button>\n      </div>\n    );\n}\n\n}\n}\n\nexport default Stat;\n"]},"metadata":{},"sourceType":"module"}